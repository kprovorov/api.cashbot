name: Test

on:
  push:

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: cashbot
          MYSQL_ROOT_PASSWORD: secret
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Caching composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Copy .env
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run IDE Helper
        run: composer ide

#      - name: Run Rector
#        run: composer rector

      - name: Run Pint
        run: composer pint

      - name: Commit
        uses: EndBug/add-and-commit@v7
        with:
          message: 'Lint'
          default_author: github_actions

#      - name: Run PHPStan
#        run: composer phpstan

      - name: Run tests
        run: php artisan test
